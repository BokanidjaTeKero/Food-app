{"version":3,"sources":["assets/modalBg1.jpeg","config/Fire.js","contexts/AuthContext.js","contexts/AppContext.js","components/SearchFilter.jsx","components/Header.jsx","components/LogReg.jsx","components/FoodList.jsx","components/Food.jsx","components/Pagination.jsx","components/Home.jsx","components/User.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","appId","measurementId","db","firestore","AuthContext","createContext","AuthContextProvider","props","useState","logEmail","logPassword","login","setLoging","regEmail","regPassword","register","setRegister","activity","setActivity","notificationActivity","setTimeout","msg","setMsg","menU","setMenu","Provider","value","loginUser","signInWithEmailAndPassword","then","cred","window","location","href","catch","error","registerUser","createUserWithEmailAndPassword","toggleMenu","menuClasses","reg","overlay","form","log","notificationShow","active","deactive","notificationMsg","good","status","bad","children","AppContext","AppContextProvider","searchedData","setSearchedData","currentPage","postsPerPage","currentPosts","setCurrentPosts","indexOfLastPost","indexOfFirstPost","favFood","setFavFood","addFavFood","userID","setUserID","addUserID","loader","setLoader","showSearch","setShowSearch","food","setFood","filter","setFilter","myHealth","setMyHealth","myDiet","setMyDiet","myCalories","setMyCalories","healthChBoxValues","setHealthChBoxValues","dietChBoxValues","setDietChBoxValues","myMinCal","setMyMinCal","myMaxCal","setMyMaxCal","urlConfig","data","type","url","length","map","item","console","undefined","join","caloriesUrlConfig","min","max","selectedFood","setSelectedFood","showModal","setShowModal","show","setShow","setNutData","ingData","setIngData","nutDataEven","setNutDataEven","nutDataOdd","setNutDataOdd","foodValues","nutValues","ingValues","nutEvenValues","nutOddValues","index","foodValueSettings","Object","values","recipe","totalNutrients","ingredientLines","closeModal","formatData","responseData","user","push","firestoreId","useEffect","getFavoriteFoodData","collection","get","querySnapshot","forEach","doc","id","favoriteFood","uid","onAuthStateChanged","searchForFood","apiReqData","key","addData","activeLoader","selectFood","deployingUrl","handleCheckBox","itemValue","target","group","name","includes","position","indexOf","splice","handleCaloriesBox","txt","addToFavorite","hits","comparator","image","every","add","err","deleteFood","delete","btnAvailable","del","changeSearchBarShowMode","getPosts","slice","SearchFilter","useContext","getData","e","preventDefault","axios","req","toggleFilter","filterShow","open","class","close","filterMenu","className","onSubmit","placeholder","onChange","onClick","action","Header","setData","to","signOut","handleLogout","LogReg","menu","act","notMsg","setLogEmail","setLogPassword","setRegEmail","setRegPassword","FoodList","selectData","cardsList","card","uuid","style","backgroundImage","backgroundSize","backgroundPosition","label","Food","left","when","src","require","alt","yield","quantity","toFixed","unit","Pagination","totalPosts","paginate","pageNumbers","i","Math","ceil","number","Home","btnAvailableDel","btnAvailableAdd","setCurrentPage","q","pageNumber","User","App","setupUI","loggedInLinks","document","querySelectorAll","loggedOutLinks","display","newData","path","component","exact","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"qRAAAA,EAAOC,QAAU,IAA0B,uC,iJCe7BC,GAJOC,IAASC,cATf,CACXC,OAAQ,0CACRC,WAAY,2CACZC,YAAa,kDACbC,UAAW,2BACXC,MAAO,4CACPC,cAAe,iBAOEP,IAASD,QAChBS,EAAKR,IAASS,YCbfC,EAAcC,0BA2GZC,EAzGa,SAACC,GAAW,IAAD,EACRC,mBAAS,CAChC,CAACC,SAAW,GAAIC,YAAc,MAFC,mBAC5BC,EAD4B,KACrBC,EADqB,OAIHJ,mBAAS,CACrC,CAACK,SAAW,GAAIC,YAAc,MALC,mBAI5BC,EAJ4B,KAIlBC,EAJkB,OAgBPR,oBAC5B,GAjBmC,mBAgBhCS,EAhBgC,KAgBtBC,EAhBsB,KAmBjCC,EAAuB,WACzBD,GAAY,GACZE,YAAW,WACPF,GAAY,KACb,MAvBgC,EAyBjBV,oBAClB,GA1BmC,mBAyBhCa,EAzBgC,KAyB3BC,EAzB2B,OA2EXd,oBACpB,GA5E+B,mBA2E5Be,EA3E4B,KA2EtBC,EA3EsB,KA2FnC,OACI,kBAACpB,EAAYqB,SAAb,CACwBC,MAAO,CAAEf,QAAOI,WACRY,UAtDlB,SAAClB,EAAUC,GACzBE,EAAU,CAAC,CAACH,WAAUC,iBAEtBjB,EAAKmC,2BAA4BnB,EAAUC,GAAcmB,MAAM,SAAAC,GAC3DX,IACAG,GAAO,GACPF,YAAW,WACPW,OAAOC,SAASC,KAAK,UACtB,QAENC,OAAM,SAAAC,GACHhB,IACAG,GAAO,OA0CgCc,aArC1B,SAACvB,EAAUC,GAC5BE,EAAY,CAAC,CAACH,WAAUC,iBAExBrB,EAAK4C,+BAAgCxB,EAAUC,GAAce,MAAM,SAAAC,GAC3DX,IACAG,GAAO,GACPF,YAAW,WACPW,OAAOC,SAASC,KAAK,UACtB,QAENC,OAAM,SAAAC,GACHhB,IACAG,GAAO,OA0BiBC,OAAMe,WAjBvB,WACfd,GAASD,IAiBuBgB,YAfhB,CAChBC,IAAM,CACFC,QAAU,iBACVC,KAAO,wBAEXC,IAAM,CACFF,QAAU,GACVC,KAAO,KAQkCE,iBAvF5B,CACrB3B,SAAW,CACP4B,OAAS,uBACTC,SAAW,KAqFqB7B,WAAU8B,gBArE1B,CACpBC,KAAO,CACHC,OAAS,mBACT5B,IAAM,YAEV6B,IAAM,CACFD,OAAS,qBACT5B,IAAM,WA+D0BA,QAE3Bd,EAAM4C,W,QCrGNC,EAAa/C,0BAuTXgD,EArTY,SAAC9C,GAAW,IAAD,EACMC,mBAAS,IADf,mBAC3B8C,EAD2B,KACbC,EADa,OAOZ/C,mBAAS,GAAxBgD,EAP2B,sBAQXhD,mBAAS,IAAzBiD,EAR2B,sBASMjD,qBATN,mBAS3BkD,EAT2B,KASbC,EATa,KAW5BC,EAAkBJ,EAAcC,EAChCI,EAAmBD,EAAkBH,EAZT,EAsBJjD,mBAAS,IAtBL,mBAsB3BsD,EAtB2B,KAsBlBC,EAtBkB,KAuB5BC,EAAa,SAACF,GAChBC,EAAWD,IAxBmB,EA4BNtD,qBA5BM,mBA4B3ByD,EA5B2B,KA4BnBC,EA5BmB,KA6B5BC,EAAY,SAACF,GACfC,EAAUD,IA9BoB,EAkCNzD,oBAAS,GAlCH,mBAkC3B4D,EAlC2B,KAkCnBC,EAlCmB,OAwCE7D,qBAxCF,mBAwC3B8D,EAxC2B,KAwCfC,EAxCe,OA8CV/D,qBA9CU,mBA8C3BgE,EA9C2B,KA8CrBC,EA9CqB,OAwDVjE,oBAAU,GAxDA,mBAwD/BkE,EAxD+B,KAwDvBC,EAxDuB,OAyDNnE,mBAAS,IAzDH,mBAyD/BoE,EAzD+B,KAyDrBC,EAzDqB,OA0DVrE,mBAAS,IA1DC,mBA0D/BsE,GA1D+B,KA0DvBC,GA1DuB,QA2DFvE,mBAAS,IA3DP,qBA2D/BwE,GA3D+B,MA2DnBC,GA3DmB,SA4DYzE,mBAAS,IA5DrB,qBA4D/B0E,GA5D+B,MA4DZC,GA5DY,SA6DQ3E,mBAAS,IA7DjB,qBA6D/B4E,GA7D+B,MA6DdC,GA7Dc,SA8DN7E,mBAAS,IA9DH,qBA8D/B8E,GA9D+B,MA8DrBC,GA9DqB,SA+DN/E,mBAAS,IA/DH,qBA+D/BgF,GA/D+B,MA+DrBC,GA/DqB,MA2E5BC,GAAY,SAAEC,EAAMC,GAEtB,IAAMC,EAAMF,EAAKG,OACbH,EAAKI,KAAK,SAAAC,GACN,MAAM,IAAN,OAAYJ,EAAZ,YAAsBI,MAI1BC,QAAQtD,IAAI,mCAYhB,YARQuD,IAARL,EACgBA,EAAIM,KAAK,IAIT,IAMdC,GAAoB,SAAEC,EAAKC,GAU7B,OAPAD,EAAIP,OACG,oBAAiBO,EAAjB,YAA0BC,GAIvB,IA1GoB,GAyJM9F,qBAzJN,qBAyJ3B+F,GAzJ2B,MAyJbC,GAzJa,SAoKAhG,oBAAS,GApKT,qBAoK3BiG,GApK2B,MAoKhBC,GApKgB,SAqKVlG,oBAAS,GArKC,qBAqK3BmG,GArK2B,MAqKrBC,GArKqB,SAwKJpG,qBAxKI,qBAwKlBqG,IAxKkB,gBAyKJrG,qBAzKI,qBAyK3BsG,GAzK2B,MAyKlBC,GAzKkB,SA0KIvG,qBA1KJ,qBA0K3BwG,GA1K2B,MA0KdC,GA1Kc,SA2KEzG,qBA3KF,qBA2K3B0G,GA3K2B,MA2KfC,GA3Ke,MA6L5BC,GAAa,SAACb,IAhBM,SAAEc,EAAUC,GAClC,IAAIC,EAAgB,GAChBC,EAAe,GACnBH,EAAUtB,KAAI,SAAEC,EAAMyB,GAClB,OAAIA,EAAQ,IAAM,EACXF,EAAcA,EAAczB,QAAUE,EAEtCwB,EAAaA,EAAa1B,QAAUE,KAG/Ca,GAAWQ,GACXN,GAAWO,GACXL,GAAeM,GACfJ,GAAcK,GAOdE,CAHmBC,OAAOC,OAAOrB,EAAasB,OAAOC,gBAClCH,OAAOC,OAAOrB,EAAasB,OAAOE,mBAMnDC,GAAa,WACfpB,IAAQ,GACRxF,YAAW,WACPsF,IAAa,GACbF,GAAgB,MACjB,MAwBDyB,GAAa,SAACC,GAChB,IAAMvC,EAAO,GACb,IAAK,IAAMwC,KAAQD,EACfvC,EAAKyC,KAAL,eACOF,EAAaC,GADpB,CAEIE,YAAaF,KAGrB,OAAOxC,GAGX2C,qBAAU,cAEP,CAACxE,IAGJ,IAUMyE,GAAsB,WACxBrI,EAAGsI,WAAWvE,GAAQwE,MAAM5G,MAAK,SAAC6G,GAC9B,IAAMF,EAAa,GACnBE,EAAcC,SAAQ,SAACC,GACvBJ,EAAWI,EAAIC,IAAMD,EAAIjD,UAEzB3B,EAAWiE,GAAWO,QAYxBM,GAAe,SAACX,GAClBjI,EAAGsI,WAAWL,EAAKY,KAAKN,MAAM5G,MAAK,SAAC6G,GACpC,IAAMF,EAAa,GACfE,EAAcC,SAAQ,SAACC,GACvBJ,EAAWI,EAAIC,IAAMD,EAAIjD,UAEzB3B,EAAWiE,GAAWO,QAgB9B,OANAF,qBAAU,WAvBN7I,EAAKuJ,oBAAoB,SAAAb,GACrBA,IACAhE,EAAUgE,EAAKY,KACfD,GAAaX,SAuBlB,CAAClE,IAIA,kBAACb,EAAW3B,SAAZ,CAAqBC,MAAO,CAAE4B,eAAckB,OAChByE,cAvPV,SAACzE,GACnBC,EAAQD,IAsPmC0E,WApP5B,CACfC,IAAM,mCACNN,GAAK,YAmPuBO,QArShB,SAAC9F,GACbC,EAAgBD,IAoSqB+F,aApQpB,SAACjF,GAClBC,EAAUD,IAmQwCkF,WA7InC,SAAC/C,GAChBC,GAAgBD,GAChBa,GAAWb,GACXG,IAAa,GACbtF,YAAW,WACPwF,IAAQ,KACV,KAwI0BD,QAAMG,WAASE,eAAaE,cAC5BX,gBAAcnC,SAAQwC,WAASoB,cAC/BvB,aAAW7B,WAAUE,UAAQyE,aAxOxC,WAEjB1E,EAAaa,GAAWR,GAAmB,WAC3CH,GAAWW,GAAWN,GAAiB,SACvCH,GAAemB,GAAmBd,GAAUE,KAE5Cb,GAAU,IAmOkB6E,eA7KT,SAAC9H,GACpB,IAEIiE,EAFA8D,EAAY/H,EAAMgI,OAAOhI,MACzBiI,EAAQjI,EAAMgI,OAAOE,KAOzB,GAHAjE,EADU,WAAVgE,EACOzE,GACAE,QAEUc,IAAduD,EACC,GAAG9D,EAAKkE,SAAUJ,GAAa,CAC3B,IAAIK,EAAWnE,EAAKoE,QAASN,GAC7B9D,EAAKqE,OAAQF,EAAU,GACb,WAAVH,EACAxE,GAAqBQ,GACrBN,GAAmBM,QAGnBA,EAAKA,EAAKG,QAAU2D,EACV,WAAVE,EACAxE,GAAqBQ,GACrBN,GAAmBM,IAwJiBjB,SAAQuF,kBA3L9B,SAACvI,GACvB,IAAIwI,EAAMxI,EAAMgI,OAAOhI,MAGhB,YAFEA,EAAMgI,OAAOb,GAIlBtD,GAAY2E,GAIZzE,GAAYyE,IAkLYlF,cAAYb,YAAWgG,cA9FjC,SAAE3F,GACpB,IAAI4F,EAAO5F,EACP6F,EAAa7F,EAAKqD,OAAOyC,MAGVxG,EAAQyG,OAAM,SAAAvE,GAC7B,OAAOA,EAAK6B,OAAOyC,QAAUD,KAI7BnK,EAAGsI,WAAYvE,GAASuG,IACpBJ,GACFvI,MAAK,WAAQ0G,QAAwBrG,OAAM,SAAEuI,OAI/CxE,QAAQtD,IAAI,sBA8EkDsB,SAAQC,YAC9CF,aAAYF,UAAS4G,WA3DlC,SAAClG,GAEhBtE,EAAGsI,WAAWvE,GAAQ2E,IAAIpE,EAAK6D,aAAasC,SAASzI,OAAM,SAAAC,GACvD8D,QAAQ9D,MAAM,4BAA6BA,MAE/CoG,KACAP,MAqD6D4C,aApB5C,CACjBC,KAAM,EACNL,KAAM,GAkBqElG,aAC/CwG,wBArQA,SAACxG,GAC7BC,EAAcD,IAoQuCZ,eAAcqH,SA/RtD,SAACzH,QACM4C,IAAjB5C,GACCK,EAAgBL,EAAa8G,KAAKY,MAAMnH,EAAkBD,OA+RzDrD,EAAM4C,W,+BC5KJ8H,EArIM,WAAO,IAChB/B,EAAegC,qBAAW9H,GAA1B8F,WACAE,EAAY8B,qBAAW9H,GAAvBgG,QACAC,EAAiB6B,qBAAW9H,GAA5BiG,aACAzE,EAAasG,qBAAW9H,GAAxBwB,SACAE,EAAWoG,qBAAW9H,GAAtB0B,OACAE,EAAekG,qBAAW9H,GAA1B4B,WACAuE,EAAiB2B,qBAAW9H,GAA5BmG,aACAC,EAAmB0B,qBAAW9H,GAA9BoG,eACAS,EAAsBiB,qBAAW9H,GAAjC6G,kBATe,EAUGzJ,mBAAS,IAVZ,mBAUfgE,EAVe,KAUTC,EAVS,OAWOjE,oBAAU,GAXjB,mBAWfkE,EAXe,KAWPC,EAXO,KAajBwG,EAAU,SAACC,GACbA,EAAEC,iBACFhC,GAAa,GACbiC,IAAM7C,IAAN,0CAA8CjE,GAA9C,OAAuDI,GAAvD,OAAoEE,EAApE,mBAAuFoE,EAAWL,GAAlG,oBAAkHK,EAAWC,KAA7H,OAAqInE,EAArI,mBACCnD,MAAK,SAAA0J,GAAG,OAAInC,EAAQmC,EAAI5F,SACxB9D,MAAK,kBAAM4C,EAAQ,OACnB5C,MAAK,kBAAKwH,GAAa,OAGtBmC,EAAe,SAACJ,GAClBA,EAAEC,iBACF1G,GAAWD,IAGT+G,EAAa,CACfC,KAAO,CAAEC,MAAQ,qBACjBC,MAAQ,CAAED,MAAQ,uBAGhBE,EAAanH,EAAS+G,EAAWC,KAAOD,EAAWG,MACzD,OACI,yBAAKE,UAAU,gBACX,0BAAMC,SAAU,SAACX,GAAD,OAAOD,EAAQC,IAAIU,UAAU,0BACzC,2BAAOA,UAAU,eAAelG,KAAK,SAASoG,YAAY,cAActK,MAAQ8C,EAAOyH,SAAU,gBAAEvC,EAAF,EAAEA,OAAF,OAAcjF,EAAQiF,EAAOhI,UAC9H,4BAAQwK,QAAS,SAACd,GAAD,OAAOD,EAAQC,IAAIU,UAAU,mEAC1C,uBAAGA,UAAU,kBAAb,WAEJ,4BAAQI,QAAS,SAACd,GAAD,OAAOI,EAAaJ,IAAIU,UAAU,mEAC/C,uBAAGA,UAAU,kBAAb,cAGR,yBAAKjD,GAAG,kBAAkBiD,UAAS,0BAAqBD,EAAWF,QAC/D,yBAAKG,UAAU,kBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,oBACX,uCACA,0BAAMA,UAAU,gBAAgBK,OAAO,KACnC,2BAAOF,SAAU,SAACb,GAAD,OAAOnB,EAAkBmB,KACtC,sCACA,2BAAOU,UAAU,iBAAiBlG,KAAK,SAASiD,GAAG,aAEvD,2BAAOoD,SAAU,SAACb,GAAD,OAAOnB,EAAkBmB,KACtC,oCACA,2BAAOU,UAAU,iBAAiBlG,KAAK,SAASiD,GAAG,eAI/D,yBAAKiD,UAAU,6BACX,qCACA,0BAAMA,UAAU,0BAA0BK,OAAO,KAC7C,2BACA,2BAAOD,QAAS,SAACd,GAAD,OAAO5B,EAAe4B,KAClC,2BAAOvC,GAAG,eAAejD,KAAK,WAAWlE,MAAM,eAAekI,KAAK,WACnE,gDAGJ,2BACA,2BAAOsC,QAAS,SAACd,GAAD,OAAO5B,EAAe4B,KAClC,2BAAOvC,GAAG,QAAQjD,KAAK,WAAWlE,MAAM,QAAQkI,KAAK,WACrD,yCAGJ,2BACA,2BAAOsC,QAAS,SAACd,GAAD,OAAO5B,EAAe4B,KAClC,2BAAOvC,GAAG,aAAajD,KAAK,WAAWlE,MAAM,aAAakI,KAAK,WAC/D,8CAGJ,2BACA,2BAAOsC,QAAS,SAACd,GAAD,OAAO5B,EAAe4B,KAClC,2BAAOvC,GAAG,UAAUjD,KAAK,WAAWlE,MAAM,UAAUkI,KAAK,WACzD,6CAKZ,yBAAKkC,UAAU,6BACX,mCACA,0BAAMA,UAAU,wBAAwBK,OAAO,KAC3C,2BACA,2BAAOD,QAAS,SAACd,GAAD,OAAO5B,EAAe4B,KAClC,2BAAOvC,GAAG,WAAWjD,KAAK,WAAWlE,MAAM,WAAWkI,KAAK,SAC3D,4CAGJ,2BACA,2BAAOsC,QAAS,SAACd,GAAD,OAAO5B,EAAe4B,KAClC,2BAAOvC,GAAG,eAAejD,KAAK,WAAWlE,MAAM,eAAekI,KAAK,SACnE,gDAGJ,2BACA,2BAAOsC,QAAS,SAACd,GAAD,OAAO5B,EAAe4B,KAClC,2BAAOvC,GAAG,WAAWjD,KAAK,WAAWlE,MAAM,WAAWkI,KAAK,SAC3D,4CAGJ,2BACA,2BAAOsC,QAAS,SAACd,GAAD,OAAO5B,EAAe4B,KAClC,2BAAOvC,GAAG,UAAUjD,KAAK,WAAWlE,MAAM,UAAUkI,KAAK,SACzD,+CAOpB,yBAAKkC,UAAU,kBACX,4BAAQI,QAAS,kBAAM3C,KAAiBuC,UAAU,mEAC9C,uBAAGA,UAAU,kBAAb,SAEJ,4BAAQI,QAAS,SAACd,GAAD,OAAOI,EAAaJ,IAAIU,UAAU,mEAC/C,uBAAGA,UAAU,kBAAb,cCtETM,EArDC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACNjI,EAAW8G,qBAAW9H,GAAtBgB,OACAE,EAAe4G,qBAAW9H,GAA1BkB,WAFmB,EAGG9D,oBAAU,GAHb,mBAGnBkE,EAHmB,KAGXC,EAHW,KAkBzB8G,EAAa,CACfC,KAAO,CAAEC,MAAQ,qBACjBC,MAAQ,CAAED,MAAQ,uBAGhBE,EAAanH,EAAS+G,EAAWC,KAAOD,EAAWG,MAErD,OACI,yBAAKE,UAAU,uBACX,6BACI,yBAAKA,UAAU,eACbxH,GACE,kBAAC,EAAD,CAAcwH,UAAU,OAAOO,QAAYA,IAE/C,kBAAC,IAAD,CAAOC,GAAG,QAAQR,UAAU,wBACxB,yBAAKA,UAAU,cAEnB,4BAAQI,QAAS,SAACd,GAAD,OAtBZ,SAACA,GAClBA,EAAEC,iBACF1G,GAAWD,GAoByB8G,CAAaJ,IAAIU,UAAU,8FAC/C,uBAAGA,UAAU,kBAAb,SAEJ,wBAAIA,UAAS,uBAAkBD,EAAWF,QACtC,4BAAI,kBAAC,IAAD,CAAOG,UAAU,cAAcQ,GAAG,SAAlC,cACJ,wBAAIJ,QAAS,SAACd,GAAD,OAnCX,SAACA,GACnBA,EAAEC,iBAEF5L,EAAK8M,UAAU1K,MAAK,WAChBE,OAAOC,SAASC,KAAK,OA+BWuK,CAAapB,IAAIU,UAAU,0BAA/C,aAIN1H,GACF,yBAAK0H,UAAU,oBACX,yBAAKA,UAAU,cCqBhBW,G,MAtEA,WAAO,IAAD,EAMTvB,qBAAW9K,GALXmB,EADS,EACTA,KAAMgB,EADG,EACHA,YACND,EAFS,EAETA,WAAYX,EAFH,EAEGA,UACZS,EAHS,EAGTA,aAAcQ,EAHL,EAGKA,iBACd3B,EAJS,EAITA,SAAU8B,EAJD,EAICA,gBACV1B,EALS,EAKTA,IAGFqL,EAAOnL,EAAOgB,EAAYC,IAAMD,EAAYI,IAC5CgK,EAAM1L,EAAW2B,EAAiB3B,SAAS4B,OAASD,EAAiB3B,SAAS6B,SAC9E8J,EAASvL,EAAM0B,EAAgBC,KAAOD,EAAgBG,IAV3C,EAYe1C,mBAAS,IAZxB,mBAYVC,EAZU,KAYAoM,EAZA,OAaqBrM,mBAAS,IAb9B,mBAaVE,EAbU,KAaGoM,EAbH,OAoBetM,mBAAS,IApBxB,mBAoBVK,EApBU,KAoBAkM,EApBA,OAqBqBvM,mBAAS,IArB9B,mBAqBVM,EArBU,KAqBGkM,EArBH,KA8BjB,OACI,yBAAKlB,UAAU,qBACX,yBAAKA,UAAU,YAAYjD,GAAG,aAC1B,yBAAKiD,UAAS,yCAAoCY,EAAKhK,MAAQmG,GAAG,cAC9D,0BAAMkD,SApBF,SAACX,GACjBA,EAAEC,iBACF1J,EAAUlB,EAAUC,GACpBmM,EAAY,IACZC,EAAe,MAiBC,qCACA,2BAAOjE,GAAG,WAAWjD,KAAK,QAAQoG,YAAY,QAAQtK,MAAQjB,EAAWwL,SAAU,SAACb,GAAD,OAAOyB,EAAYzB,EAAE1B,OAAOhI,UAC/G,2BAAOmH,GAAG,cAAcjD,KAAK,WAAWoG,YAAY,WAAWtK,MAAQhB,EAAcuL,SAAU,SAACb,GAAD,OAAO0B,EAAe1B,EAAE1B,OAAOhI,UAC9H,2CAGR,yBAAKoK,UAAU,oCAAoCjD,GAAG,iBAClD,0BAAMkD,SAnBC,SAACX,GACpBA,EAAEC,iBACFjJ,EAAavB,EAAUC,GACvBiM,EAAY,IACZC,EAAe,MAgBC,wCACA,2BAAOnE,GAAG,WAAWjD,KAAK,QAAQoG,YAAY,QAAQtK,MAAQb,EAAWoL,SAAU,SAACb,GAAD,OAAO2B,EAAY3B,EAAE1B,OAAOhI,UAC/G,2BAAOmH,GAAG,cAAcjD,KAAK,WAAWoG,YAAY,WAAWtK,MAAQZ,EAAcmL,SAAU,SAACb,GAAD,OAAO4B,EAAe5B,EAAE1B,OAAOhI,UAC9H,8CAGR,yBAAKoK,UAAU,qBACX,yBAAKA,UAAS,wBAAmBY,EAAKjK,SAAWoG,GAAG,iBAChD,yBAAKqD,QAAS5J,EAAYwJ,UAAU,sCAChC,wCAEJ,yBAAKI,QAAS5J,EAAYwJ,UAAU,uCAChC,uCAIZ,yBAAKA,UAAU,0BACX,yBAAKA,UAAS,6BAAwBc,EAAO3J,QAA/B,OAAwC0J,GAAO9D,GAAG,sBAC5D,yBAAKiD,UAAU,2BACX,qCAAOc,EAAOvL,a,+BCX3B4L,EAnDE,SAAC,GAA0B,IAAxBtH,EAAuB,EAAvBA,KAAMuH,EAAiB,EAAjBA,WAEpBC,OAAqBjH,IAATP,EAEdA,EAAKI,KAAK,SAACqH,EAAM3F,GACb,OAAIA,EAAQ,IAAM,EAEV,yBAAKqE,UAAU,SAAS3C,IAAMiE,EAAK/E,aAAegF,MAASnB,QAAU,WAAQgB,EAAYE,KACrF,yBAAKtB,UAAU,cACf,6BACI,yBAAKA,UAAU,WAAWwB,MAAO,CAACC,gBAAgB,OAAD,OAAUH,EAAKvF,OAAOyC,MAAtB,KAAiCkD,eAAgB,QAASC,mBAAoB,YAC/H,yBAAK3B,UAAU,cAAcwB,MAAO,CAACC,gBAAgB,OAAD,OAAUH,EAAKvF,OAAOyC,MAAtB,QACpD,yBAAKwB,UAAU,eACX,2BAAKsB,EAAKvF,OAAO6F,WAQ7B,yBAAK5B,UAAU,SAAS3C,IAAMiE,EAAK/E,aAAegF,MAASnB,QAAU,WAAQgB,EAAYE,KACrF,yBAAKtB,UAAU,cACf,6BACI,yBAAKA,UAAU,WAAWwB,MAAO,CAACC,gBAAgB,OAAD,OAAUH,EAAKvF,OAAOyC,MAAtB,KAAiCkD,eAAgB,QAASC,mBAAoB,YAC/H,yBAAK3B,UAAU,cAAcwB,MAAO,CAACC,gBAAgB,OAAD,OAAUH,EAAKvF,OAAOyC,MAAtB,QACpD,yBAAKwB,UAAU,eACX,2BAAKsB,EAAKvF,OAAO6F,cAUrC,yBAAK5B,UAAU,8BAAf,WAGJ,OAEI,yBAAKA,UAAU,WACX,yBAAKA,UAAU,iBACTqB,K,yBCqDHQ,EA9FF,SAAC,GAAkB,IAAhB9C,EAAe,EAAfA,IAAKL,EAAU,EAAVA,IAAU,EAEkBU,qBAAW9H,GAAhD0D,EAFmB,EAEnBA,QAASE,EAFU,EAEVA,YAAaE,EAFH,EAEGA,WACtBX,EAAiB2E,qBAAW9H,GAA5BmD,aACAI,EAASuE,qBAAW9H,GAApBuD,KACAqB,EAAekD,qBAAW9H,GAA1B4E,WACAmC,EAAkBe,qBAAW9H,GAA7B+G,cACAO,EAAeQ,qBAAW9H,GAA1BsH,WAER,OACI,kBAAC,IAAD,CAAOkD,MAAI,EAACC,KAAOlH,GACf,yBAAKmF,UAAU,uBACf,yBAAKgC,IAAKC,EAAQ,IAA6BC,IAAI,QAAQlC,UAAU,aACrE,yBAAKjD,GAAG,aAAaiD,UAAU,wBAC3B,4BAAQI,QAAU,kBAAMlE,KAAe8D,UAAU,yEAC7C,uBAAGA,UAAU,kBAAb,UAEFjB,GACF,4BAAQqB,QAAS,kBAAMxB,EAAWnE,IAAeuF,UAAU,yEACvD,uBAAGA,UAAU,kBAAb,WAGFtB,GACF,4BAAQ0B,QAAS,kBAAM/B,EAAc5D,IAAeuF,UAAU,yEAC1D,uBAAGA,UAAU,kBAAb,QAGJ,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,kCACX,yBAAKgC,IAAMvH,EAAasB,OAAOyC,MAAQ0D,IAAMzH,EAAasB,OAAOyC,SAErE,yBAAKwB,UAAU,kCACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,aACX,2CACA,mCAAUvF,EAAasB,OAAOoG,MAA9B,YAEJ,yBAAKnC,UAAU,YACX,wBAAIA,UAAU,iBAENhF,EAAQf,KAAK,SAAEC,GACX,OACI,wBAAImD,IAAMkE,MAASvB,UAAU,iBACzB,0BAAMA,UAAU,kBAAmB9F,WAUnE,yBAAK8F,UAAU,kCACX,4BACMvF,EAAasB,OAAO6F,OAE1B,yBAAK5B,UAAU,sBACX,+CACA,yBAAKA,UAAU,YACX,wBAAIA,UAAU,0BAEN9E,EAAYjB,KAAI,SAAEC,GACd,OACI,wBAAImD,IAAMkE,MAASvB,UAAU,iBACzB,0BAAMA,UAAU,kBAAmB9F,EAAK0H,OACxC,0BAAM5B,UAAU,8BAA+B9F,EAAKkI,SAASC,QAAQ,GAAMnI,EAAKoI,WAMpG,wBAAItC,UAAU,2BAEV5E,EAAWnB,KAAK,SAAEC,GACd,OACI,wBAAImD,IAAMkE,MAASvB,UAAU,iBACzB,0BAAMA,UAAU,kBAAmB9F,EAAK0H,OACxC,0BAAM5B,UAAU,8BAA+B9F,EAAKkI,SAASC,QAAQ,GAAMnI,EAAKoI,mBChEjHC,G,MAlBI,SAAC,GAGhB,IAH4D,IAA1C5K,EAAyC,EAAzCA,aAAc6K,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACtCC,EAAc,GAEXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAa7K,GAAegL,IACvDD,EAAYpG,KAAKqG,GAGrB,OACI,yBAAK3C,UAAU,cACT0C,EAAYzI,KAAI,SAAA6I,GAAM,OACpB,4BAAQzF,IAAKyF,EAAQ1C,QAAS,kBAAMqC,EAASK,IAAS9C,UAAU,yEAC3D8C,SCuCNC,EA9CF,WAAO,IACVpI,EAAcyE,qBAAW9H,GAAzBqD,UADS,EAEoByE,qBAAW9H,GAAxCE,EAFS,EAETA,aAAcgG,EAFL,EAEKA,WACdwB,EAA4BI,qBAAW9H,GAAvC0H,wBAHS,EAIStK,oBAAS,GAA5BsO,EAJU,sBAKStO,oBAAS,GAA5BuO,EALU,sBAMqBvO,mBAAS,GAN9B,mBAMVgD,EANU,KAMGwL,EANH,OAOMxO,mBAAS,IAAzBiD,EAPU,oBAUXG,EAAkBJ,EAAcC,EAChCI,EAAmBD,EAAkBH,EAO3C,OAFAqH,GAAwB,QAEE5E,IAAnB5C,EAAa2L,EAClB,yBAAKnD,UAAU,kBACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAUnG,KAAOrC,EAAa8G,KAAKY,MAAMnH,EAAkBD,GAAmBsJ,WAAa5D,IACzF7C,GACA,kBAAC,EAAD,CAAMoE,IAAMiE,EAAkBtE,IAAMuE,IAEtC,kBAAC,EAAD,CACEtL,aAAcA,EACd6K,WAAYhL,EAAa8G,KAAKtE,OAC9ByI,SAdS,SAACW,GAAD,OAAgBF,EAAeE,QAmB9C,yBAAKpD,UAAU,kBACb,yBAAKA,UAAU,2BACb,uCACA,4BACE,0BAAMA,UAAU,YAAhB,KAAmC,0BAAMA,UAAU,WAAhB,QAAqC,0BAAMA,UAAU,WAAhB,OAD1E,uHAEgE,0BAAMA,UAAU,YAAhB,aAFhE,aAIA,6DCbOqD,EA5BF,WAAO,IACR1I,EAAcyE,qBAAW9H,GAAzBqD,UACA3C,EAAYoH,qBAAW9H,GAAvBU,QACAwF,EAAe4B,qBAAW9H,GAA1BkG,WACAwB,EAA4BI,qBAAW9H,GAAvC0H,wBAJO,EAKWtK,oBAAS,GAA5BsO,EALQ,sBAMWtO,oBAAS,GAA5BuO,EANQ,oBAUf,OAFAjE,GAAwB,QAEL5E,IAAZpC,GAAqC,OAAZA,GAAoBA,EAAQgC,OAAS,EACjE,yBAAKgG,UAAU,kBACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAUnG,KAAO7B,EAAUoJ,WAAa5D,IACtC7C,GACA,kBAAC,EAAD,CAAMoE,IAAMiE,EAAkBtE,IAAMuE,MAK1C,yBAAKjD,UAAU,kBACb,yBAAKA,UAAU,gBACb,uC,SCwDGsD,EA/DH,WAAO,IAAD,EAEY5O,qBAFZ,mBAETyD,EAFS,KAEDC,EAFC,KAIhB+B,QAAQtD,IAAI,aAAcsB,GAC1B,IAUMoL,EAAU,SAAClH,GACf,IAAMmH,EAAgBC,SAASC,iBAAiB,cAC1CC,EAAiBF,SAASC,iBAAiB,eAE7CrH,GACFjE,EAAUiE,EAAKY,KACjB7I,EAAGsI,WAAWL,EAAKY,KAAKN,MAAM5G,MAAK,SAAC6G,GAEhC,IAAMF,EAAa,GACnBE,EAAcC,SAAQ,SAACC,GACvBJ,EAAWI,EAAIC,IAAMD,EAAIjD,aAI7B2J,EAAc3G,SAAS,SAAA3C,GAAI,OAAIA,EAAKsH,MAAMoC,QAAU,WACpDD,EAAe9G,SAAS,SAAA3C,GAAI,OAAIA,EAAKsH,MAAMoC,QAAU,YAErDJ,EAAc3G,SAAS,SAAA3C,GAAI,OAAIA,EAAKsH,MAAMoC,QAAU,UACpDD,EAAe9G,SAAS,SAAA3C,GAAI,OAAIA,EAAKsH,MAAMoC,QAAU,aAYvD,OANFpH,qBAAU,WAjCN7I,EAAKuJ,oBAAoB,SAAAb,GACjBA,EACAkH,EAAQlH,GAERkH,SA+BT,IAKC,kBAAC,IAAD,KACE,yBAAKvD,UAAU,OACb,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEO,QAAY,SAAEsD,GAAF,OAAe,EAAKtD,QAASsD,MAE3C,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAAYhB,IAChC,kBAAC,IAAD,CAAOe,KAAK,QAAQC,UAAYV,IAChC,kBAAC,IAAD,CAAOW,OAAK,EAACF,KAAK,IAAIC,UAAYpD,SChE1BsD,QACW,cAA7BhO,OAAOC,SAASgO,UAEe,UAA7BjO,OAAOC,SAASgO,UAEhBjO,OAAOC,SAASgO,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFb,SAASc,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3O,MAAK,SAAA4O,GACJA,EAAaC,gBAEdxO,OAAM,SAAAC,GACL8D,QAAQ9D,MAAMA,EAAMwO,c","file":"static/js/main.3138c64f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/modalBg1.1abf6594.jpeg\";","import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDKY07z8xpn1WhHRZF40S-PoPLVFwIiXV8\",\r\n    authDomain: \"foodappusersfavoritefood.firebaseapp.com\",\r\n    databaseURL: \"https://foodappusersfavoritefood.firebaseio.com\",\r\n    projectId: \"foodappusersfavoritefood\",\r\n    appId: \"1:568053922842:web:22cf4b867f18e1278ce5a3\",\r\n    measurementId: \"G-J292670BN6\"\r\n  };\r\n  // Initialize Firebase\r\nexport  const fire = firebase.initializeApp(config);\r\n//   firebase.analytics();\r\n\r\n//   // make auth and firestore references\r\nexport  const auth = firebase.auth();\r\nexport  const db = firebase.firestore();\r\n\r\n// export default fire;","import React, { createContext, useState } from 'react';\r\nimport { auth } from '../config/Fire';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthContextProvider = (props) => {\r\n    const [login, setLoging] = useState([\r\n        {logEmail : '', logPassword : ''}\r\n    ]);\r\n    const [register, setRegister] = useState([\r\n        {regEmail : '', regPassword : ''}\r\n    ]);\r\n\r\n// notifications\r\nconst notificationShow = {\r\n    activity : {\r\n        active : ' notification-active',\r\n        deactive : ''\r\n    }\r\n}\r\n\r\nconst [activity, setActivity] = useState(\r\n    false\r\n)\r\nconst notificationActivity = () => {\r\n    setActivity(true);\r\n    setTimeout(() => {\r\n        setActivity(false)\r\n    }, 3000)\r\n}\r\nconst [msg, setMsg] = useState(\r\n    false\r\n)\r\nconst notificationMsg = {\r\n    good : {\r\n        status : ' successfullyReg',\r\n        msg : 'Welcome!'\r\n    },\r\n    bad : {\r\n        status : ' unsuccessfullyReg',\r\n        msg : 'Error!'\r\n    }\r\n}\r\n\r\n// logging user\r\n    const loginUser = (logEmail, logPassword) => {\r\n        setLoging([{logEmail, logPassword}]);\r\n\r\n        auth.signInWithEmailAndPassword( logEmail, logPassword ).then( cred => {\r\n            notificationActivity();\r\n            setMsg(true);\r\n            setTimeout(() => {\r\n                window.location.href='/home';\r\n            }, 2000) \r\n        })\r\n        .catch(error => {\r\n            notificationActivity();\r\n            setMsg(false)\r\n        })\r\n    }\r\n\r\n// registering user\r\n    const registerUser = (regEmail, regPassword) => {\r\n        setRegister([{regEmail, regPassword}]);\r\n\r\n        auth.createUserWithEmailAndPassword( regEmail, regPassword ).then( cred => {\r\n                notificationActivity();\r\n                setMsg(true);\r\n                setTimeout(() => {\r\n                    window.location.href='/home';\r\n                }, 2000) \r\n            })\r\n            .catch(error => {\r\n                notificationActivity();\r\n                setMsg(false)\r\n            })\r\n    }\r\n\r\n\r\n// show log in or register menu\r\n    const [menU, setMenu] = useState(\r\n        true\r\n    )\r\n    const toggleMenu = () => {\r\n        setMenu(!menU)\r\n    }\r\n    const menuClasses = {\r\n        reg : {\r\n            overlay : ' overlay-right',\r\n            form : ' hide-form-container'\r\n        },\r\n        log : {\r\n            overlay : '',\r\n            form : ''\r\n        }\r\n    }\r\n    return (\r\n        <AuthContext.Provider \r\n                                value={{ login, register, \r\n                                        loginUser, registerUser, \r\n                                        menU, toggleMenu, \r\n                                        menuClasses, notificationShow,\r\n                                        activity, notificationMsg,\r\n                                        msg\r\n                                }}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AuthContextProvider;","import React, { createContext, useState, useEffect } from 'react';\r\nimport { auth } from '../config/Fire';\r\nimport {db} from '../config/Fire';\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst AppContextProvider = (props) => {\r\n    const [searchedData, setSearchedData] = useState({});\r\n    const addData = (searchedData) => {\r\n        setSearchedData(searchedData)\r\n    }\r\n\r\n// pagination\r\n    const [currentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n    const [currentPosts, setCurrentPosts] = useState();\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n\r\n\r\n    const getPosts = (searchedData) => {\r\n        if(searchedData !== undefined){\r\n            setCurrentPosts(searchedData.hits.slice(indexOfFirstPost, indexOfLastPost))\r\n        }\r\n    };\r\n\r\n// favorite food data\r\n    const [favFood, setFavFood] = useState({});\r\n    const addFavFood = (favFood) => {\r\n        setFavFood(favFood)\r\n    }\r\n\r\n// user\r\n    const [userID, setUserID] = useState();\r\n    const addUserID = (userID) => {\r\n        setUserID(userID)\r\n    }\r\n\r\n//loader\r\n    const [loader, setLoader] = useState(false)\r\n    const activeLoader = (loader) => {\r\n        setLoader(loader)\r\n    }\r\n\r\n// show searching page / home SearchFilter\r\n    const [showSearch, setShowSearch] = useState();\r\n    const changeSearchBarShowMode = (showSearch) => {\r\n        setShowSearch(showSearch)\r\n    }\r\n\r\n// search input\r\n    const [food, setFood] = useState();\r\n    const searchForFood = (food) => {\r\n        setFood(food);\r\n    }\r\n    const apiReqData = {\r\n        key : '0a5a92325d15d099bdb12116ab6dbfb0',\r\n        id : '14f36e30',\r\n    }\r\n\r\n// url config\r\nconst [filter, setFilter] = useState( false );\r\nconst [myHealth, setMyHealth] = useState('');\r\nconst [myDiet, setMyDiet] = useState('');\r\nconst [myCalories, setMyCalories] = useState('');\r\nconst [healthChBoxValues, setHealthChBoxValues] = useState([]);\r\nconst [dietChBoxValues, setDietChBoxValues] = useState([]);\r\nconst [myMinCal, setMyMinCal] = useState('');\r\nconst [myMaxCal, setMyMaxCal] = useState('');\r\n\r\n// url config part ||\r\n    const deployingUrl = () => {\r\n        \r\n        setMyHealth( urlConfig( healthChBoxValues, 'health' ))\r\n        setMyDiet( urlConfig( dietChBoxValues, 'diet' ))\r\n        setMyCalories( caloriesUrlConfig( myMinCal, myMaxCal ))\r\n        \r\n        setFilter(false)\r\n    }\r\n    \r\n    const urlConfig = ( data, type ) => {\r\n        \r\n        const url = data.length ? (\r\n            data.map( item => {\r\n                return `&${ type }=${ item }`\r\n            } )\r\n        ) :\r\n        (\r\n            console.log('nothing is selected as a filter')\r\n        )\r\n        \r\n        let joinedUrl = '';\r\n        url !== undefined ? (\r\n            joinedUrl = url.join('')\r\n        ) \r\n        : \r\n        (\r\n            joinedUrl = ''\r\n        )\r\n        \r\n        return joinedUrl\r\n    }\r\n\r\n    const caloriesUrlConfig = ( min, max) => {\r\n    \r\n        let url = '';\r\n        min.length ? (\r\n            url = `&calories=${ min }-${ max }`\r\n        ) \r\n        : \r\n        (\r\n            url = ''\r\n        )\r\n        return url;\r\n    }\r\n    \r\n// calories filter\r\n    const handleCaloriesBox = (value) => {\r\n        let txt = value.target.value;\r\n        let id = value.target.id;\r\n    \r\n        id === 'min-cal' ? \r\n        (\r\n            setMyMinCal(txt)\r\n        ) \r\n        : \r\n        (\r\n            setMyMaxCal(txt)\r\n        )\r\n    }\r\n\r\n    const handleCheckBox = (value) => {\r\n        let itemValue = value.target.value;\r\n        let group = value.target.name;\r\n        let data;\r\n\r\n        group === 'health' ? \r\n        data = healthChBoxValues :\r\n        data = dietChBoxValues\r\n\r\n        if(itemValue !== undefined){\r\n            if(data.includes( itemValue )) {\r\n                let position = data.indexOf( itemValue );\r\n                data.splice( position, 1)\r\n                group === 'health' ? \r\n                setHealthChBoxValues(data) :\r\n                setDietChBoxValues(data)\r\n                \r\n            } else {\r\n                data[data.length] = itemValue\r\n                group === 'health' ? \r\n                setHealthChBoxValues(data) :\r\n                setDietChBoxValues(data)\r\n            }\r\n        }    \r\n    }\r\n\r\n// select food\r\n    const [selectedFood, setSelectedFood] = useState()\r\n    const selectFood = (selectedFood) => {\r\n        setSelectedFood(selectedFood);\r\n        foodValues(selectedFood);\r\n        setShowModal(true);\r\n        setTimeout(() => {\r\n            setShow(true)\r\n        },10)\r\n    }\r\n\r\n// class of showing food modal\r\n    const [showModal, setShowModal] = useState(false) \r\n    const [show, setShow] = useState(false)    \r\n\r\n// nutriens and ingredients values showing settings\r\n    const [nutData, setNutData] = useState();\r\n    const [ingData, setIngData] = useState();\r\n    const [nutDataEven, setNutDataEven] = useState();\r\n    const [nutDataOdd, setNutDataOdd] = useState();\r\n\r\n    const foodValueSettings = ( nutValues,ingValues ) => {\r\n        let nutEvenValues = [];\r\n        let nutOddValues = []\r\n        nutValues.map(( item, index ) => {\r\n            if( index % 2 === 0 ){\r\n            return nutEvenValues[nutEvenValues.length] = item;\r\n            } else {\r\n            return nutOddValues[nutOddValues.length] = item;\r\n            }\r\n        })   \r\n        setNutData(nutValues)\r\n        setIngData(ingValues)\r\n        setNutDataEven(nutEvenValues)\r\n        setNutDataOdd(nutOddValues) \r\n    }\r\n    \r\n    const foodValues = (selectedFood) => {\r\n        const nutValues  = Object.values(selectedFood.recipe.totalNutrients);\r\n        const ingValues  = Object.values(selectedFood.recipe.ingredientLines);\r\n        \r\n        foodValueSettings( nutValues,ingValues )\r\n    }\r\n\r\n// close food detail modal\r\n    const closeModal = () => {\r\n        setShow(false)\r\n        setTimeout(() => {\r\n            setShowModal(false)\r\n            setSelectedFood('')\r\n        }, 800)\r\n    }\r\n\r\n// adding food to favorite \r\n    const addToFavorite = ( food ) => {\r\n        let hits = food;\r\n        let comparator = food.recipe.image;\r\n\r\n    // comparing the food item for add, with the favorite food data items\r\n        const canBeAdded = favFood.every(item => {\r\n            return item.recipe.image !== comparator\r\n        })\r\n\r\n        canBeAdded ? (\r\n            db.collection( userID ).add(\r\n                hits\r\n            ).then(() => { getFavoriteFoodData()}).catch(( err ) => {\r\n            \r\n            })\r\n        ) : (\r\n            console.log('Food do not exist')\r\n        )\r\n    }\r\n\r\n    const formatData = (responseData) => {\r\n        const data = [];\r\n        for (const user in responseData) {\r\n            data.push({\r\n                ...responseData[user],\r\n                firestoreId: user,\r\n            })\r\n        }\r\n        return data;\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n    }, [favFood])\r\n\r\n// delete favorite food\r\n    const deleteFood = (food) => {\r\n\r\n        db.collection(userID).doc(food.firestoreId).delete().catch(error => {\r\n            console.error(\"Error removing document: \", error);\r\n        });\r\n        getFavoriteFoodData()\r\n        closeModal()\r\n    }\r\n\r\n// get favorite food data\r\n    const getFavoriteFoodData = () => {\r\n        db.collection(userID).get().then((querySnapshot) => {\r\n            const collection = [];\r\n            querySnapshot.forEach((doc) => {\r\n            collection[doc.id] = doc.data(); \r\n            });\r\n            addFavFood(formatData(collection))\r\n        })\r\n    }\r\n\r\n    const check = () => {\r\n        auth.onAuthStateChanged( user => {\r\n        if( user ){\r\n            addUserID(user.uid)\r\n            favoriteFood(user)\r\n        } \r\n    })}\r\n\r\n    const favoriteFood = (user) => {\r\n        db.collection(user.uid).get().then((querySnapshot) => {\r\n        const collection = [];\r\n            querySnapshot.forEach((doc) => {\r\n            collection[doc.id] = doc.data();\r\n            });\r\n            addFavFood(formatData(collection))\r\n            }  \r\n        )\r\n    }\r\n\r\n    const btnAvailable = {\r\n        del : true,\r\n        add : true\r\n    }\r\n\r\n    useEffect(() => {\r\n        check()\r\n        \r\n    }, [userID])\r\n\r\n\r\n    return (\r\n        <AppContext.Provider value={{ searchedData, food,\r\n                                    searchForFood, apiReqData, \r\n                                    addData, activeLoader,selectFood,\r\n                                    show, ingData, nutDataEven, nutDataOdd,\r\n                                    selectedFood, loader, setShow, closeModal,\r\n                                    showModal, myHealth, myDiet, deployingUrl,\r\n                                    handleCheckBox, filter, handleCaloriesBox,\r\n                                    myCalories, addUserID, addToFavorite, userID, setUserID,\r\n                                    addFavFood, favFood, deleteFood, btnAvailable, showSearch,\r\n                                    changeSearchBarShowMode, currentPosts, getPosts\r\n                                    }}>\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AppContextProvider;","import React, { useContext, useState } from 'react'\r\nimport './SearchFilter.css';\r\nimport axios from 'axios';\r\nimport { AppContext } from '../contexts/AppContext';\r\n\r\nconst SearchFilter = () => {\r\n    const { apiReqData } = useContext(AppContext);\r\n    const { addData } = useContext(AppContext);\r\n    const { activeLoader } = useContext(AppContext);\r\n    const { myHealth } = useContext(AppContext);\r\n    const { myDiet } = useContext(AppContext);\r\n    const { myCalories } = useContext(AppContext);\r\n    const { deployingUrl } = useContext(AppContext);\r\n    const { handleCheckBox } = useContext(AppContext);\r\n    const { handleCaloriesBox } = useContext(AppContext);\r\n    const [ food, setFood ] = useState('');\r\n    const [ filter, setFilter ] = useState( false );\r\n\r\n    const getData = (e) => {\r\n        e.preventDefault()\r\n        activeLoader(true);\r\n        axios.get(`https://api.edamam.com/search?q=${ food }${ myHealth }${ myDiet }&app_id=${ apiReqData.id }&app_key=${ apiReqData.key }${ myCalories }&from=0&to=100`)\r\n        .then(req => addData(req.data))\r\n        .then(() => setFood(''))\r\n        .then(()=> activeLoader(false))\r\n    }\r\n\r\n    const toggleFilter = (e) => {\r\n        e.preventDefault();\r\n        setFilter(!filter)\r\n    }\r\n\r\n    const filterShow = {\r\n        open : { class : ' swing-in-top-fwd' },\r\n        close : { class : ' swing-out-top-bck' }\r\n    }\r\n\r\n    const filterMenu = filter ? filterShow.open : filterShow.close;\r\n    return (\r\n        <div className='SearchFilter'>\r\n            <form onSubmit={(e) => getData(e)} className=\"searchFilter-container\">\r\n                <input className='search-input' type=\"search\" placeholder=\"Search term\" value={ food } onChange={({target}) => setFood(target.value)} />\r\n                <button onClick={(e) => getData(e)} className=\"btn-floating btn-small waves-effect waves-light light-green btn\">\r\n                    <i className=\"material-icons\">search</i>\r\n                </button>\r\n                <button onClick={(e) => toggleFilter(e)} className=\"btn-floating btn-small waves-effect waves-light light-green btn\">\r\n                    <i className=\"material-icons\">settings</i>\r\n                </button>\r\n            </form>\r\n            <div id='forms-container' className={`forms-container ${filterMenu.class}`}>\r\n                <div className='forms-contents'>\r\n                    <div className='forms-content'>\r\n                        <div className='calories-element'>\r\n                            <p>Calories</p>\r\n                            <form className='calories-form' action='#'>\r\n                                <label onChange={(e) => handleCaloriesBox(e)}>\r\n                                    <span>From</span>\r\n                                    <input className=\"calories-input\" type=\"number\" id='min-cal' />\r\n                                </label>\r\n                                <label onChange={(e) => handleCaloriesBox(e)}>\r\n                                    <span>To</span>\r\n                                    <input className=\"calories-input\" type=\"number\" id='max-cal' />\r\n                                </label>\r\n                            </form>\r\n                        </div>\r\n                        <div className='health-element form-chbox'>\r\n                            <p>Health</p>\r\n                            <form className='filter-form health-form' action='#'>\r\n                                <p>\r\n                                <label onClick={(e) => handleCheckBox(e)}>\r\n                                    <input id=\"alcohol-free\" type=\"checkbox\" value='alcohol-free' name='health' />\r\n                                    <span>Alcohol free</span>\r\n                                </label>\r\n                                </p>\r\n                                <p>\r\n                                <label onClick={(e) => handleCheckBox(e)}>\r\n                                    <input id=\"vegan\" type=\"checkbox\" value='vegan' name='health' />\r\n                                    <span>Vegan</span>\r\n                                </label>\r\n                                </p>\r\n                                <p>\r\n                                <label onClick={(e) => handleCheckBox(e)}>\r\n                                    <input id=\"vegetarian\" type=\"checkbox\" value='vegetarian' name='health' />\r\n                                    <span>Vegetarian</span>\r\n                                </label>\r\n                                </p>\r\n                                <p>\r\n                                <label onClick={(e) => handleCheckBox(e)}>\r\n                                    <input id=\"peanuts\" type=\"checkbox\" value='peanuts' name='health' />\r\n                                    <span>Peanuts</span>\r\n                                </label>\r\n                                </p>\r\n                            </form>\r\n                        </div>\r\n                        <div className='health-element form-chbox'>\r\n                            <p>Diet</p>\r\n                            <form className='filter-form diet-form' action='#'>\r\n                                <p>\r\n                                <label onClick={(e) => handleCheckBox(e)}>\r\n                                    <input id=\"balanced\" type=\"checkbox\" value='balanced' name='diet'/>\r\n                                    <span>Balanced</span>\r\n                                </label>\r\n                                </p>\r\n                                <p>\r\n                                <label onClick={(e) => handleCheckBox(e)}>\r\n                                    <input id=\"high-protein\" type=\"checkbox\" value='high-protein' name='diet'/>\r\n                                    <span>High-Protein</span>\r\n                                </label>\r\n                                </p>\r\n                                <p>\r\n                                <label onClick={(e) => handleCheckBox(e)}>\r\n                                    <input id=\"low-carb\" type=\"checkbox\" value='low-carb' name='diet'/>\r\n                                    <span>Low-Carb</span>\r\n                                </label>\r\n                                </p>\r\n                                <p>\r\n                                <label onClick={(e) => handleCheckBox(e)}>\r\n                                    <input id=\"low-fat\" type=\"checkbox\" value='low-fat' name='diet' />\r\n                                    <span>Low-Fat</span>\r\n                                </label>\r\n                                </p>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='forms-controls'>\r\n                    <button onClick={() => deployingUrl() } className=\"btn-floating btn-small waves-effect waves-light light-green btn\">\r\n                        <i className=\"material-icons\">done</i>\r\n                    </button>\r\n                    <button onClick={(e) => toggleFilter(e)} className=\"btn-floating btn-small waves-effect waves-light light-green btn\">\r\n                        <i className=\"material-icons\">close</i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default SearchFilter;","import React, { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\nimport { auth } from '../config/Fire';\r\nimport { AppContext } from '../contexts/AppContext';\r\nimport SearchFilter from './SearchFilter';\r\n\r\nconst  Header = ({setData}) => {\r\n    const { loader } = useContext(AppContext);\r\n    const { showSearch } = useContext(AppContext);\r\n    const [ filter, setFilter ] = useState( false );\r\n\r\nconst handleLogout  = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth.signOut().then(() => {\r\n        window.location.href='/';\r\n    })\r\n}\r\n\r\nconst toggleFilter = (e) => {\r\n    e.preventDefault();\r\n    setFilter(!filter)\r\n}\r\n\r\nconst filterShow = {\r\n    open : { class : ' swing-in-top-fwd' },\r\n    close : { class : ' swing-out-top-bck' }\r\n}\r\n\r\nconst filterMenu = filter ? filterShow.open : filterShow.close;\r\n\r\n    return(\r\n        <div className='Header navbar-fixed'>\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                { showSearch &&\r\n                    <SearchFilter className=\"left\" setData = { setData } />\r\n                }\r\n                <Link  to=\"/home\" className=\"brand-logo logged-in\">\r\n                    <div className='logo-img'></div>\r\n                </Link>\r\n                <button onClick={(e) => toggleFilter(e)} className=\"btn-floating btn-small waves-effect waves-light light-green btn account-menu-btn logged-in\">\r\n                    <i className=\"material-icons\">menu</i>\r\n                </button>\r\n                <ul className={`account-menu ${filterMenu.class}`}>\r\n                    <li><Link  className='logReg-link' to=\"/user\">MyFavFood</Link></li>\r\n                    <li onClick={(e) => handleLogout(e)} className='logReg-link logout-btn'>Logout</li>\r\n                </ul>\r\n                </div>\r\n            </nav>\r\n            { loader &&\r\n            <div className='loader-container'>\r\n                <div className='loader'></div>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useContext, useState } from 'react';\r\nimport './LogReg.css';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\n\r\nconst LogReg = () => {\r\n    const { menU, menuClasses, \r\n            toggleMenu, loginUser, \r\n            registerUser, notificationShow,\r\n            activity, notificationMsg,\r\n            msg\r\n        } = useContext(AuthContext);\r\n\r\n    const menu = menU ? menuClasses.reg : menuClasses.log;\r\n    const act = activity ? notificationShow.activity.active : notificationShow.activity.deactive;\r\n    const notMsg = msg ? notificationMsg.good : notificationMsg.bad\r\n\r\n    const [logEmail, setLogEmail] = useState('');\r\n    const [logPassword, setLogPassword] = useState('');\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        loginUser(logEmail, logPassword);\r\n        setLogEmail('');\r\n        setLogPassword('');\r\n    }\r\n    const [regEmail, setRegEmail] = useState('');\r\n    const [regPassword, setRegPassword] = useState('');\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        registerUser(regEmail, regPassword);\r\n        setRegEmail('');\r\n        setRegPassword('');\r\n    }\r\n\r\n    return (\r\n        <div className='LogReg logged-out'>\r\n            <div className=\"container\" id=\"container\">\r\n                <div className={`form-container login-container ${menu.form}`} id='login-form'>\r\n                    <form onSubmit= { handleLogin }>\r\n                        <h1>Login</h1>\r\n                        <input id='logEmail' type=\"email\" placeholder=\"Email\" value={ logEmail } onChange={(e) => setLogEmail(e.target.value)} />\r\n                        <input id='logPassword' type=\"password\" placeholder=\"Password\" value={ logPassword } onChange={(e) => setLogPassword(e.target.value)} />\r\n                        <button>Login</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"form-container register-container\" id='register-form'>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <h1>Register</h1>\r\n                        <input id='regEmail' type=\"email\" placeholder=\"Email\" value={ regEmail } onChange={(e) => setRegEmail(e.target.value)} />\r\n                        <input id='regPassword' type=\"password\" placeholder=\"Password\" value={ regPassword } onChange={(e) => setRegPassword(e.target.value)} />\r\n                        <button>Register</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"overlay-container\">\r\n                    <div className={`overlay-panel ${menu.overlay}`} id='overlay-panel'>\r\n                        <div onClick={toggleMenu} className=\"overlay-panel-item panel-item-left\">\r\n                            <p>Register</p>\r\n                        </div>\r\n                        <div onClick={toggleMenu} className=\"overlay-panel-item panel-item-right\">\r\n                            <p>Login</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"notification-container\">\r\n                    <div className={`notification-panel ${notMsg.status}${act}`} id='notification-panel'>\r\n                        <div className=\"notification-panel-item\">\r\n                            <p>{`${notMsg.msg}`}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default LogReg;","import React from 'react';\r\nimport './FoodListBeta.css';\r\nimport uuid from 'uuid/v1';\r\n\r\nconst FoodList = ({ data, selectData }) => {\r\n\r\nconst cardsList = data !== undefined ? (\r\n    \r\n    data.map( (card, index) => {\r\n        if( index % 2 === 0 ) {\r\n            return (\r\n                <div className=\"column\" key={ card.firestoreId || uuid() } onClick={ () => { selectData( card ) } } >\r\n                    <div className='prow prow1'>\r\n                    <div>\r\n                        <div className=\"thumb-nb\" style={{backgroundImage: `url(${ card.recipe.image })`, backgroundSize: 'cover', backgroundPosition: 'center'}}></div>\r\n                        <div className='thumb-color' style={{backgroundImage: `url(${ card.recipe.image })`}}></div>\r\n                        <div className=\"description\">\r\n                            <p>{ card.recipe.label }</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"column\" key={ card.firestoreId || uuid() } onClick={ () => { selectData( card ) } } >\r\n                    <div className='prow prow2'>\r\n                    <div>\r\n                        <div className=\"thumb-nb\" style={{backgroundImage: `url(${ card.recipe.image })`, backgroundSize: 'cover', backgroundPosition: 'center'}}></div>\r\n                        <div className='thumb-color' style={{backgroundImage: `url(${ card.recipe.image })`}}></div>\r\n                        <div className=\"description\">\r\n                            <p>{ card.recipe.label }</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    )) : \r\n    (\r\n        <div className='center movie-list-no-movie'>No Food</div>\r\n    )\r\n\r\n    return (\r\n    \r\n        <div className=\"element\">\r\n            <div className=\"portfolio-tab\">\r\n                { cardsList }\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default FoodList;","import React, { useContext } from 'react';\r\nimport { AppContext } from '../contexts/AppContext';\r\nimport uuid from 'uuid/v1';\r\nimport './Food.css';\r\nimport Slide from 'react-reveal/Slide';\r\n\r\n\r\nconst Food = ({ del, add }) => {\r\n    \r\n    const { ingData, nutDataEven, nutDataOdd } = useContext(AppContext);\r\n    const { selectedFood } = useContext(AppContext);\r\n    const { show } = useContext(AppContext);\r\n    const { closeModal } = useContext(AppContext);\r\n    const { addToFavorite } = useContext(AppContext);\r\n    const { deleteFood } = useContext(AppContext);\r\n\r\n    return (\r\n        <Slide left when={ show }>\r\n            <div className='main-food-container'>\r\n            <img src={require('../assets/modalBg1.jpeg') } alt='bgimg' className='bg-image'/>\r\n            <div id='food-modal' className='food-modal-container'>\r\n                <button onClick={ () => closeModal() } className=\"btn-floating btn-small waves-effect waves-light light-green btn right\">\r\n                    <i className=\"material-icons\">close</i>\r\n                </button>\r\n                { del &&\r\n                <button onClick={() => deleteFood(selectedFood)} className=\"btn-floating btn-small waves-effect waves-light light-green btn right\">\r\n                    <i className=\"material-icons\">delete</i>\r\n                </button>\r\n                }\r\n                { add &&\r\n                <button onClick={() => addToFavorite(selectedFood)} className=\"btn-floating btn-small waves-effect waves-light light-green btn right\">\r\n                    <i className=\"material-icons\">add</i>\r\n                </button>\r\n                }\r\n                <div className='food-modal-content-data'>\r\n                    <div className='food-modal-content content-img'>\r\n                        <img src={ selectedFood.recipe.image } alt={ selectedFood.recipe.image }/>\r\n                    </div>\r\n                    <div className='food-modal-content content-ing'>\r\n                        <div className='ing-data-container'>\r\n                            <div className='ing-title'>\r\n                                <h3>INGREDIENTS</h3>\r\n                                <h5>For { selectedFood.recipe.yield } person</h5>\r\n                            </div>\r\n                            <div className='ing-data'>\r\n                                <ul className='ing-data-list'>\r\n                                    { \r\n                                        ingData.map( ( item ) => {\r\n                                            return (\r\n                                                <li key={ uuid() } className='nut-data-item' >\r\n                                                    <span className='nut-item-label'>{ item }</span>\r\n                                                </li>\r\n                                            )\r\n                                        }\r\n                                        )\r\n                                    }\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='food-modal-content content-nut'>\r\n                        <h1>\r\n                            { selectedFood.recipe.label }\r\n                        </h1>\r\n                        <div className='nut-data-container'>\r\n                            <h3>NUTRIENS VALUES</h3>\r\n                            <div className='nut-data'>\r\n                                <ul className='nut-data-list nut-left'>\r\n                                    { \r\n                                        nutDataEven.map(( item ) => {\r\n                                            return (\r\n                                                <li key={ uuid() } className='nut-data-item' >\r\n                                                    <span className='nut-item-label'>{ item.label }</span>\r\n                                                    <span className='nut-item-quantity-and-unit'>{ item.quantity.toFixed(0) }{ item.unit }</span>\r\n                                                </li>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </ul>\r\n                                <ul className='nut-data-list nut-right'>\r\n                                {\r\n                                    nutDataOdd.map( ( item ) => {\r\n                                        return (\r\n                                            <li key={ uuid() } className='nut-data-item' >\r\n                                                <span className='nut-item-label'>{ item.label }</span>\r\n                                                <span className='nut-item-quantity-and-unit'>{ item.quantity.toFixed(0) }{ item.unit }</span>\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n            </div>\r\n        </Slide>\r\n    )\r\n}\r\n\r\nexport default Food;","import React from 'react';\r\nimport './Pagination.css';\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++){\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    return (\r\n        <div className='pagination'>\r\n            { pageNumbers.map(number => (\r\n                <button key={number} onClick={() => paginate(number)} className=\"btn-floating btn-small waves-effect waves-light light-green btn right\">\r\n                    {number}\r\n                </button>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React, { useContext, useState } from 'react';\r\nimport { AppContext } from '../contexts/AppContext';\r\nimport './Home.css';\r\nimport FoodList from './FoodList';\r\nimport Food from './Food';\r\nimport Pagination from './Pagination';\r\n\r\nconst Home = () => {\r\n  const { showModal } = useContext(AppContext);    \r\n  const { searchedData, selectFood } = useContext(AppContext);\r\n  const { changeSearchBarShowMode } = useContext(AppContext);\r\n  const [btnAvailableDel] = useState(false);\r\n  const [btnAvailableAdd] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(10);\r\n\r\n// Get current posts\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n\r\n// Change page\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  changeSearchBarShowMode(true)\r\n\r\n  return searchedData.q !== undefined  ? (\r\n    <div className='home-container'>\r\n      <div className='home-content'>\r\n        <FoodList data={ searchedData.hits.slice(indexOfFirstPost, indexOfLastPost) } selectData={ selectFood }/>\r\n        { showModal &&\r\n          <Food del={ btnAvailableDel } add={ btnAvailableAdd } /> \r\n        }\r\n        <Pagination \r\n          postsPerPage={postsPerPage}\r\n          totalPosts={searchedData.hits.length}\r\n          paginate={paginate}\r\n        />\r\n      </div> \r\n    </div> \r\n  ) : (\r\n    <div className='home-container'>\r\n      <div className='home-content margin-top'>\r\n        <h1>Welcome</h1>\r\n        <h3>\r\n          <span className='orange-c'>I</span><span className='green-c'>food</span><span className='black-c'>App</span> is a place where you can find your favorite recipes,\r\n          you can add them to your favorites and view them later in the <span className='orange-c'>MyFavFood</span> section.\r\n        </h3>\r\n        <h4>Take your time look around</h4>\r\n      </div> \r\n    </div> \r\n  )\r\n}\r\n\r\nexport default Home;","import React, { useContext, useState } from 'react';\r\nimport { AppContext } from '../contexts/AppContext';\r\nimport './FoodListBeta.css';\r\nimport FoodList from './FoodList';\r\nimport Food from './Food';\r\n\r\nconst User = () => {\r\n    const { showModal } = useContext(AppContext);\r\n    const { favFood } = useContext(AppContext);\r\n    const { selectFood } = useContext(AppContext);\r\n    const { changeSearchBarShowMode } = useContext(AppContext);\r\n    const [btnAvailableDel] = useState(true);\r\n    const [btnAvailableAdd] = useState(false);\r\n\r\n    changeSearchBarShowMode(false)\r\n\r\n    return favFood !== undefined && favFood !== null && favFood.length > 0 ? (\r\n        <div className='user-container'>\r\n          <div className='user-content'>\r\n            <FoodList data={ favFood } selectData={ selectFood }/>\r\n            { showModal &&\r\n              <Food del={ btnAvailableDel } add={ btnAvailableAdd } /> \r\n            }\r\n          </div> \r\n        </div> \r\n      ) : (\r\n        <div className='user-container'>\r\n          <div className='user-content'>\r\n            <h1>User</h1>\r\n          </div> \r\n        </div> \r\n      )\r\n}\r\n\r\nexport default User;\r\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport AuthContextProvider from './contexts/AuthContext';\nimport AppContextProvider from './contexts/AppContext';\nimport { auth } from './config/Fire';\nimport {db} from './config/Fire';\n\nimport Header from './components/Header';\nimport LogReg from './components/LogReg';\nimport Home from './components/Home';\nimport User from './components/User';\n\n// SDK error, tring to make it work\n// import 'firebase/auth';       \n// import 'firebase/storage';    \n// import 'firebase/database';   \n// import 'firebase/firestore';   \n// import 'firebase/messaging';   \n// import 'firebase/functions'; \n\n\nconst App = () => {\n\n  const [userID, setUserID] = useState();\n\n  console.log('userID ==>', userID)\n  const trackingAuthStatus = () => {\n    auth.onAuthStateChanged( user => {\n        if( user ){\n            setupUI(user)\n        } else {\n            setupUI()\n        }\n    })\n}\n\n  const setupUI = (user) => {\n    const loggedInLinks = document.querySelectorAll('.logged-in');\n    const loggedOutLinks = document.querySelectorAll('.logged-out');\n\n    if( user ){\n      setUserID(user.uid)\n    db.collection(user.uid).get().then((querySnapshot) => {\n\n        const collection = [];\n        querySnapshot.forEach((doc) => {\n        collection[doc.id] = doc.data(); \n        });\n    });\n\n    loggedInLinks.forEach( item => item.style.display = 'block');\n    loggedOutLinks.forEach( item => item.style.display = 'none');\n    } else {\n    loggedInLinks.forEach( item => item.style.display = 'none');\n    loggedOutLinks.forEach( item => item.style.display = 'block');\n    }\n  }\n\n  // window.onload(console.log('load'))\n\nuseEffect(() => {\n  trackingAuthStatus()\n}, [])\n\n// trackingAuthStatus()\n\n  return(\n    <BrowserRouter>\n      <div className='App'>\n        <AuthContextProvider>\n          <AppContextProvider>\n            <Header \n              setData = { ( newData ) => this.setData( newData ) }\n            />\n            <Route path='/home' component={ Home } />\n            <Route path='/user' component={ User } />\n            <Route exact path='/' component={ LogReg } />\n          </AppContextProvider>\n        </AuthContextProvider>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}